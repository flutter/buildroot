# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_root = "//third_party/glslang"

config("glslang_flutter_config") {
  include_dirs = [
    source_root,
    "//build/secondary/third_party/glslang_flutter",
  ]
}

source_set("glslang_flutter") {
  defines = [
    "ENABLE_OPT=1",
    "ENABLE_HLSL=1",
  ]

  public_configs = [ ":glslang_flutter_config" ]

  configs += [ "//third_party/spirv_tools_flutter:spvtools_public_config" ]

  sources = [
    "$source_root/OGLCompilersDLL/InitializeDll.cpp",
    "$source_root/OGLCompilersDLL/InitializeDll.h",
    "$source_root/SPIRV/GLSL.ext.AMD.h",
    "$source_root/SPIRV/GLSL.ext.EXT.h",
    "$source_root/SPIRV/GLSL.ext.KHR.h",
    "$source_root/SPIRV/GLSL.ext.NV.h",
    "$source_root/SPIRV/GLSL.std.450.h",
    "$source_root/SPIRV/GlslangToSpv.cpp",
    "$source_root/SPIRV/GlslangToSpv.h",
    "$source_root/SPIRV/InReadableOrder.cpp",
    "$source_root/SPIRV/Logger.cpp",
    "$source_root/SPIRV/Logger.h",
    "$source_root/SPIRV/NonSemanticDebugPrintf.h",
    "$source_root/SPIRV/SPVRemapper.cpp",
    "$source_root/SPIRV/SPVRemapper.h",
    "$source_root/SPIRV/SpvBuilder.cpp",
    "$source_root/SPIRV/SpvBuilder.h",
    "$source_root/SPIRV/SpvPostProcess.cpp",
    "$source_root/SPIRV/SpvTools.cpp",
    "$source_root/SPIRV/SpvTools.h",
    "$source_root/SPIRV/bitutils.h",
    "$source_root/SPIRV/disassemble.cpp",
    "$source_root/SPIRV/disassemble.h",
    "$source_root/SPIRV/doc.cpp",
    "$source_root/SPIRV/doc.h",
    "$source_root/SPIRV/hex_float.h",
    "$source_root/SPIRV/spirv.hpp",
    "$source_root/SPIRV/spvIR.h",
    "$source_root/glslang/GenericCodeGen/CodeGen.cpp",
    "$source_root/glslang/GenericCodeGen/Link.cpp",
    "$source_root/glslang/HLSL/hlslAttributes.cpp",
    "$source_root/glslang/HLSL/hlslAttributes.h",
    "$source_root/glslang/HLSL/hlslGrammar.cpp",
    "$source_root/glslang/HLSL/hlslGrammar.h",
    "$source_root/glslang/HLSL/hlslOpMap.cpp",
    "$source_root/glslang/HLSL/hlslOpMap.h",
    "$source_root/glslang/HLSL/hlslParseHelper.cpp",
    "$source_root/glslang/HLSL/hlslParseHelper.h",
    "$source_root/glslang/HLSL/hlslParseables.cpp",
    "$source_root/glslang/HLSL/hlslParseables.h",
    "$source_root/glslang/HLSL/hlslScanContext.cpp",
    "$source_root/glslang/HLSL/hlslScanContext.h",
    "$source_root/glslang/HLSL/hlslTokenStream.cpp",
    "$source_root/glslang/HLSL/hlslTokenStream.h",
    "$source_root/glslang/HLSL/hlslTokens.h",
    "$source_root/glslang/HLSL/pch.h",
    "$source_root/glslang/Include/BaseTypes.h",
    "$source_root/glslang/Include/Common.h",
    "$source_root/glslang/Include/ConstantUnion.h",
    "$source_root/glslang/Include/InfoSink.h",
    "$source_root/glslang/Include/InitializeGlobals.h",
    "$source_root/glslang/Include/PoolAlloc.h",
    "$source_root/glslang/Include/ResourceLimits.h",
    "$source_root/glslang/Include/ShHandle.h",
    "$source_root/glslang/Include/Types.h",
    "$source_root/glslang/Include/arrays.h",
    "$source_root/glslang/Include/intermediate.h",
    "$source_root/glslang/MachineIndependent/Constant.cpp",
    "$source_root/glslang/MachineIndependent/InfoSink.cpp",
    "$source_root/glslang/MachineIndependent/Initialize.cpp",
    "$source_root/glslang/MachineIndependent/Initialize.h",
    "$source_root/glslang/MachineIndependent/IntermTraverse.cpp",
    "$source_root/glslang/MachineIndependent/Intermediate.cpp",
    "$source_root/glslang/MachineIndependent/LiveTraverser.h",
    "$source_root/glslang/MachineIndependent/ParseContextBase.cpp",
    "$source_root/glslang/MachineIndependent/ParseHelper.cpp",
    "$source_root/glslang/MachineIndependent/ParseHelper.h",
    "$source_root/glslang/MachineIndependent/PoolAlloc.cpp",
    "$source_root/glslang/MachineIndependent/RemoveTree.cpp",
    "$source_root/glslang/MachineIndependent/RemoveTree.h",
    "$source_root/glslang/MachineIndependent/Scan.cpp",
    "$source_root/glslang/MachineIndependent/Scan.h",
    "$source_root/glslang/MachineIndependent/ScanContext.h",
    "$source_root/glslang/MachineIndependent/ShaderLang.cpp",
    "$source_root/glslang/MachineIndependent/SymbolTable.cpp",
    "$source_root/glslang/MachineIndependent/SymbolTable.h",
    "$source_root/glslang/MachineIndependent/Versions.cpp",
    "$source_root/glslang/MachineIndependent/Versions.h",
    "$source_root/glslang/MachineIndependent/attribute.cpp",
    "$source_root/glslang/MachineIndependent/attribute.h",
    "$source_root/glslang/MachineIndependent/gl_types.h",
    "$source_root/glslang/MachineIndependent/glslang_tab.cpp",
    "$source_root/glslang/MachineIndependent/glslang_tab.cpp.h",
    "$source_root/glslang/MachineIndependent/intermOut.cpp",
    "$source_root/glslang/MachineIndependent/iomapper.cpp",
    "$source_root/glslang/MachineIndependent/iomapper.h",
    "$source_root/glslang/MachineIndependent/limits.cpp",
    "$source_root/glslang/MachineIndependent/linkValidate.cpp",
    "$source_root/glslang/MachineIndependent/localintermediate.h",
    "$source_root/glslang/MachineIndependent/parseConst.cpp",
    "$source_root/glslang/MachineIndependent/parseVersions.h",
    "$source_root/glslang/MachineIndependent/preprocessor/Pp.cpp",
    "$source_root/glslang/MachineIndependent/preprocessor/PpAtom.cpp",
    "$source_root/glslang/MachineIndependent/preprocessor/PpContext.cpp",
    "$source_root/glslang/MachineIndependent/preprocessor/PpContext.h",
    "$source_root/glslang/MachineIndependent/preprocessor/PpScanner.cpp",
    "$source_root/glslang/MachineIndependent/preprocessor/PpTokens.cpp",
    "$source_root/glslang/MachineIndependent/preprocessor/PpTokens.h",
    "$source_root/glslang/MachineIndependent/propagateNoContraction.cpp",
    "$source_root/glslang/MachineIndependent/propagateNoContraction.h",
    "$source_root/glslang/MachineIndependent/reflection.cpp",
    "$source_root/glslang/MachineIndependent/reflection.h",
    "$source_root/glslang/OSDependent/osinclude.h",
    "$source_root/glslang/Public/ShaderLang.h",
  ]

  if (is_win) {
    sources += [ "$source_root/glslang/OSDependent/Windows/ossource.cpp" ]
  } else {
    sources += [ "$source_root/glslang/OSDependent/Unix/ossource.cpp" ]
  }

  deps = [ "//third_party/spirv_tools_flutter:SPIRV-Tools" ]
}
